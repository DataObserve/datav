receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

processors:
  batch:
    send_batch_size: 10000
    send_batch_max_size: 11000
    timeout: 10s
  xobservespanmetrics/prometheus:
    metrics_exporter: prometheus
    latency_histogram_buckets:
      [
        100us,
        1ms,
        2ms,
        6ms,
        10ms,
        50ms,
        100ms,
        250ms,
        500ms,
        1000ms,
        1400ms,
        2000ms,
        5s,
        10s,
        20s,
        40s,
        60s,
      ]
    dimensions_cache_size: 100000
    dimensions:
      # - name: service.namespace
      #   default: default
      # - name: deployment.environment
      #   default: default
      # This is added to ensure the uniqueness of the timeseries
      # Otherwise, identical timeseries produced by multiple replicas of
      # collectors result in incorrect APM metrics
      - name: "xobserve.collector.id"

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  zpages:
    endpoint: 0.0.0.0:55679
  pprof:
    endpoint: 0.0.0.0:1777

exporters:
  clickhousetraces:
    dsn: tcp://${CLICKHOUSE_ADDR}/?database=xobserve_traces
    docker_multi_node_cluster: ${DOCKER_MULTI_NODE_CLUSTER}
    low_cardinal_exception_grouping: ${LOW_CARDINAL_EXCEPTION_GROUPING}
  clickhousemetricswrite:
    endpoint: tcp://${CLICKHOUSE_ADDR}/?database=xobserve_metrics
    retry_on_failure:
      enabled: true
      initial_interval: 10s
      max_interval: 60s
      max_elapsed_time: 10m
    resource_to_telemetry_conversion:
      enabled: true
  clickhousemetricswrite/prometheus:
    endpoint: tcp://${CLICKHOUSE_ADDR}/?database=xobserve_metrics
    retry_on_failure:
      enabled: true
      initial_interval: 10s
      max_interval: 60s
      max_elapsed_time: 10m
  prometheus:
    endpoint: 0.0.0.0:8889
    # resource_to_telemetry_conversion:
    #   enabled: true
  # logging: {}

  clickhouselogsexporter:
    dsn: tcp://${CLICKHOUSE_ADDR}/?database=xobserve_logs
    docker_multi_node_cluster: ${DOCKER_MULTI_NODE_CLUSTER}
    timeout: 5s
    sending_queue:
      queue_size: 100

service:
  telemetry:
    metrics:
      address: 0.0.0.0:8888
  extensions:
    - health_check
    - zpages
    - pprof
  pipelines:
    traces:
      receivers: [otlp]
      processors: [xobservespanmetrics/prometheus, batch]
      exporters: [clickhousetraces]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [clickhouselogsexporter]
